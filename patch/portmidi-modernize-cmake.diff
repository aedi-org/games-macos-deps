--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -36,8 +36,6 @@
 set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE INTERNAL "Unused")
 set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "" CACHE INTERNAL "Unused")
 
-set(CMAKE_OSX_ARCHITECTURES i386 ppc x86_64 CACHE STRING "change to needed architecture for a smaller library" FORCE)
-
 PROJECT(portmidi)
 
 if(UNIX)
@@ -68,10 +66,3 @@
 include_directories(pm_common porttime)
 add_subdirectory(pm_common)
 
-add_subdirectory(pm_test)
-
-add_subdirectory(pm_dylib)
-
-# Cannot figure out how to make an xcode Java application with CMake
-add_subdirectory(pm_java)
-
--- a/pm_common/CMakeLists.txt
+++ b/pm_common/CMakeLists.txt
@@ -21,13 +21,6 @@
   set(LINUX_FLAGS "-DPMALSA")
 endif(APPLE OR WIN32)
 
-if(APPLE)
-  set(CMAKE_OSX_SYSROOT /Developer/SDKs/MacOSX10.5.sdk CACHE 
-      PATH "-isysroot parameter for compiler" FORCE)
-  set(CMAKE_C_FLAGS "-mmacosx-version-min=10.5" CACHE 
-      STRING "needed in conjunction with CMAKE_OSX_SYSROOT" FORCE)
-endif(APPLE)
-
 macro(prepend_path RESULT PATH)
   set(${RESULT})
   foreach(FILE ${ARGN})
@@ -109,20 +102,3 @@
 set_target_properties(portmidi-static PROPERTIES OUTPUT_NAME "portmidi_s")
 target_link_libraries(portmidi-static ${PM_NEEDED_LIBS})
 
-# define the jni library
-include_directories(${JAVA_INCLUDE_PATHS})
-
-set(JNISRC ${LIBSRC} ../pm_java/pmjni/pmjni.c)
-add_library(pmjni SHARED ${JNISRC})
-target_link_libraries(pmjni ${JNI_EXTRA_LIBS})
-set_target_properties(pmjni PROPERTIES EXECUTABLE_EXTENSION "jnilib")
-
-# install the libraries (Linux and Mac OS X command line)
-if(UNIX)
-  INSTALL(TARGETS portmidi-static pmjni
-    LIBRARY DESTINATION /usr/local/lib
-    ARCHIVE DESTINATION /usr/local/lib)
-# .h files installed by pm_dylib/CMakeLists.txt, so don't need them here
-#  INSTALL(FILES portmidi.h ../porttime/porttime.h
-#    DESTINATION /usr/local/include)
-endif(UNIX)
